docker file adalah file text yang berisi semua perintah yg bisa digunakan untuk membuat docker image (tahapan2)
untuk membuat docker image kita bisa menggunakan perintah docker build
untuk membuat nama tagnya tambahkan perintah -t
contoh docker build -t bima/app:1.0.0 folder-dockerfile
contoh docker build -t bima/app:1.0.0 -t bima/app:latest folder-dockerfile
dockerfile tidak memiliki extension, bisa dibuat dengan cara memberi nama DockerFile

format untuk file dockerfile
#komentar
Instruction arguments

instuction dalam docker cae insensitive tapi rekomendasinya upper case
arguments adalah data argument untuk instuction yang menyesuaikan dengan jenis Insctuction yang digunakan

//FROM Insctuction
digunakan untuk tahapan awal untuk membuild stage dari image
jarang kosongan tetapi biasanya kita membuat docker image dari docker image lain yang sudah ada
untuk menggunakan from kita bisa menggunakan perintah FROM image:version
untuk build docker build -t namaAkunDockerHub/namaImage:versi (atau tanpa versi jadi latest) namaFolder
creatednya mengikuti image

//run Instruction
instruksi untuk mengeksekusi perintah di dalam image pada saat build, sekali saja ketika akan dibuild, ketika sudah menjadi image perintah tersebut tidak akan dijalankan lagi
formatnya
RUN command
RUN ["executable","arguments",...]
jika ingin menampilkan detail bisa gunakan perintah --progress=plain
docker build melakukan cache(jika tidak ada perubahan pada file, maka akan run cachenya), jika ingin mengulangi lagi tanpa menggunakan cache, kita bisa gunakan perintah --no-cache
dengan run maka waktu creatednya akan menyesuaikan pembuatan image

//command instuction
CMD(command) instruksi yang digunakan ketika docker container berjalan
dalam docker file kita tidak bisa menambahkan lebih dari satu command, jika lebuh dari satu yang akan dijalankan adalah yang terakhir
formatnya:
CMD command param param
CMD ["executable", "param", "param"]
CMD ["param", "param"] dengan entry point 
untuk melihat hasil run cmd bisa gunakan inspect

//label instuction
digunakan untuk menambahkan metadata ke dalam docker image yang kita buat
metadata berisi informasi tambahan, misal nama aplikasi, pembuat, website,perusahaan,lisensi, dll
hanya digunakan untuk informasi saja
formatnya
LABEL <key>=<value>
LABEL <key>=<value> <key>=<value>

//Add instuction
Instruksi yang dapat digunakan untuk menambahkan file source ke dalam folder destination docker image
Akan mendeteksi apakah source merupakan file kompres atau tidak, jika mendeteksi file source maka secara otomatis file tersebut akan diextreact dalam folder destination
penambahan banyak file sekaligus di instruksi ADD menggunakan match Pattern golang /pkg.go.dev/path/filepath#Match
format instuction:
ADD source destination
ADD world.txt hello (filenya sejajar dengan docker file jika penulisan seperti ini)
ADD *.txt hello

//Copy Instruction
copy adalah instruksi yang dapat digunakan untuk menambahkan file dari source ke dalam folder destination
perbedaan dengan add adalah copy hanya copy saja, kalau add bisa download source dari URL, jika menggunakan add akan otomatis extract pada file kompres
pada best practice sebisa mungkin menggunakan COPY, jika memang butuh melakukan extract file kompres gunakan perintah RUN dan jalankan aplikasi untuk extract file kompres
format:
COPY source destination

//Ignore
saat melakukan add atau copy dari file source, docker akan membaca file bernama .dockerignore
digunakan untuk menyebutkan file apa saja yang ingin kita Ignore
artinya jika ada file yang kita sebut di dalam file .dockerignore secara otomatis file tersebut tidak akan di ADD atau di COPY
bisa juga digunakan untuk ignore folder atau menggunakan regular expression

//expose Instruction
ekspose adalah insturksi untuk memberitahu container akan listen pada port pada nomor dan protocol tertentu
tidak akan mempublish port, hanya digunakan sebagai dokumentasi untuk memberitahu yang membuat docker container bahwa docker image ini akan menggunakan port tertentu ketika dijalankan menjadi docker container
format
EXPOSE port(defaultnya menggunakan TCP)
EXPOSE port/tcp
EXPOSE port/udp

//env 
instruksi yang digunakan untuk mengubah environtment variable, baik ketika build  atau ketika dijalankan dalam docker container
ENV yang sudah di definisikan di dalam Docker file bisa digunakan kembali dengan menggunakan sintaks ${nama_env}
env yang gibuat menggunakan instruksi ENV disimpan di dalam Docker Image dan bisa dilihat menggunakan perintah docker image inspect
selain itu, env juga bisa diganti nilainya ketika pembuatan docker container dengan perintah docker container cretae --env key=value
format
ENV key=value
ENV key=value key=value

//volume
merupakan instruksi yang digunakan untuk membuat volume secara otomatis ketika membuat Docker container
semua file yg terdapat di volume secara otomatis di copy ke Docker Volume walaupun kita tidak membuat Docker Volume ketika membuat Docker container
sangat cocok ketika aplikasi menyimpan data di dalam file, sehingga data bisa secara otomatis aman berada di Docker Volume
Instruksi
VOLUME /lokasi/folder
VOLUME /lokasi/folder/lokasi/folder
VOLUME {"/lokasi/folder", "/lokasi/folder"}